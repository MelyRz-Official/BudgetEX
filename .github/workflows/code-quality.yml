name: Code Quality

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly Monday 6 AM UTC

env:
  PYTHON_VERSION: '3.12'

jobs:
  formatting:
    name: Code Formatting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install formatting tools
      run: |
        python -m pip install --upgrade pip
        pip install black isort

    - name: Check Black formatting
      run: black --check --diff --color models/ controllers/ config.py *.py

    - name: Check import sorting
      run: isort --check-only --diff --color models/ controllers/ config.py *.py

  linting:
    name: Linting
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 flake8-docstrings

    - name: Run flake8
      run: flake8 models/ controllers/ config.py --max-line-length=100 --ignore=E203,W503

  type-checking:
    name: Type Checking
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mypy

    - name: Run MyPy type checking
      run: mypy models/ controllers/ config.py --ignore-missing-imports
      continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety

    - name: Run Bandit security scan
      run: bandit -r models/ controllers/ config.py -f json -o bandit-report.json
      continue-on-error: true

    - name: Run Safety dependency check
      run: safety check --json --output safety-report.json
      continue-on-error: true

    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json

  quality-summary:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [formatting, linting, type-checking, security]
    if: always()

    steps:
    - name: Quality Summary
      run: |
        echo "## Code Quality Report" >> $GITHUB_STEP_SUMMARY
        echo "- Formatting: ${{ needs.formatting.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Linting: ${{ needs.linting.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Type Checking: ${{ needs.type-checking.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- Security: ${{ needs.security.result }}" >> $GITHUB_STEP_SUMMARY